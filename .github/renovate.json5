// Docs:
// https://docs.renovatebot.com/configuration-options/
{
  "extends": [
    "config:base"
  ],
  "automerge": true,
  "masterIssue": true,
  "rangeStrategy": "bump",
  "schedule": ["after 9pm on sunday"],
  "lockFileMaintenance": { "enabled": true },
  "packageRules": [
    ////////////////////////////////////////////////////////////
    // Standard rules for proper package management
    //
    // Renovate, by default, wants to do breaking changes
    // But we want to have wide ranges by default, and not change them.
    // Things that are braking changes
    //  - increasing minimum version of ^ dependencies and peer dependencies
    //  - engines -- because this affects the node environment of the consumer
    //             - we only want to change this if we bump the min version
    //               (as a breaking change) or widen (as a minor bump)
    ////////////////////////////////////////////////////////////
    {
      // ensure maximum compatibility, when possible
      "matchPaths": ["packages/limber-snippet"],
      "matchDepTypes": ["dependencies", "peerDependencies", "engines"],
      "enabled": false
    },
    {
      // test-apps are "minimum compatible",
      // so that testing problems is more straight forward
      // as such, deps will be updated manually
      "matchPaths": ["test-app"],
      "enabled": false
    },

    ////////////////////////////////////////////////////////////
    // Grouping namespaced packages together
    //
    // This reduces overall PR count
    //  ...which we want to do to save on time and C.I. resources.
    //  ...additionally, these tend to work best grouped together anyway
    ////////////////////////////////////////////////////////////
    {
      "groupName": "Type Definitions",
      "packagePatterns": ["^@types\/*"],
      "schedule": ["after 9pm on sunday"],
    },
    {
      "groupName": "Codemirror",
      "packagePatterns": ["^@codemirror\/*"]
    },
    {
      "groupName": "Glint",
      "packagePatterns": ["^@glint\/*"]
    },
    {
      "groupName": "Glimmer",
      "packagePatterns": ["^@glimmer\/*"]
    },
    {
      "groupName": "Embroider",
      "packagePatterns": ["^@embroider\/*"]
    },
    {
      "groupName": "Lint Dependencies",
      "schedule": ["after 9pm on sunday"],
      "packageNames": [
        "eslint",
        "babel-eslint",
        "ember-template-lint",
        "prettier"
      ],
      "packagePatterns": [
        "eslint-plugin-.*",
        "eslint-config-.*",
        ".*typescript-eslint.*"
      ]
    },
    // These are dependencies that come default when
    // generating a new ember addon
    {
      "groupName": "Framework Dependencies",
      "packageNames": [
        "@ember/optional-features",
        "ember-disable-prototype-extensions",
        "ember-export-application-global",
        "ember-load-initializers",
        "ember-maybe-import-regenerator",
        "ember-resolver",
        "ember-source",
        "ember-cli-page-title"
      ]
    },
    {
      "groupName": "CLI Dependencies",
      "packageNames": [
        "broccoli-asset-rev",
        "ember-cli",
        "ember-auto-import",
        "ember-cli-dependency-checker",
        "ember-cli-inject-live-reload",
        "ember-cli-sri",
        "ember-cli-terser"
      ]
    },
    {
      "groupName": "Testing Dependencies",
      "schedule": ["after 9pm on sunday"],
      "packageNames": [
        "qunit-dom",
        "ember-try",
        "ember-source-channel-url",
        "ember-qunit",
        "qunit"
      ]
    },
    {
      "depTypeList": ["engines"],
      "enabled": false
    }
  ]
}
