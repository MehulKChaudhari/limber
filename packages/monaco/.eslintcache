[{"/home/lprestonsegoiii/Development/NullVoxPopuli/limber/packages/monaco/.eslintrc.js":"1","/home/lprestonsegoiii/Development/NullVoxPopuli/limber/packages/monaco/broccoli-funnel.js":"2","/home/lprestonsegoiii/Development/NullVoxPopuli/limber/packages/monaco/build.js":"3","/home/lprestonsegoiii/Development/NullVoxPopuli/limber/packages/monaco/package.json":"4"},{"size":721,"mtime":1619987449185,"results":"5","hashOfConfig":"6"},{"size":371,"mtime":1619902929392,"results":"7","hashOfConfig":"6"},{"size":1496,"mtime":1619906988274,"results":"8","hashOfConfig":"6"},{"size":950,"mtime":1619987585017,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"10c426z",{"filePath":"12","messages":"13","errorCount":6,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","errorCount":5,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/lprestonsegoiii/Development/NullVoxPopuli/limber/packages/monaco/.eslintrc.js",[],"/home/lprestonsegoiii/Development/NullVoxPopuli/limber/packages/monaco/broccoli-funnel.js",["20","21","22","23","24","25"],"'use strict';\n\nconst path = require('path');\nconst Funnel = require('broccoli-funnel');\n\nconst SRC_FILES = path.join(__dirname, 'dist');\n\n/**\n  * This broccoli funnel is for copying the built assets to a target\n  * app's public folder. No building occurs\n  *\n  */\nmodule.exports = function monacoFunnel() {\n  return new Funnel(SRC_FILES, {\n    destDir: 'monaco/'\n  });\n}\n","/home/lprestonsegoiii/Development/NullVoxPopuli/limber/packages/monaco/build.js",["26","27","28","29","30"],"'use strict';\n\nconst path = require('path');\nconst os = require('os');\nconst fs = require('fs').promises;\nconst copy = require('recursive-copy');\nconst esbuild = require('esbuild');\n\nconst OUTPUT_DIR = path.join(__dirname, 'dist').toString();\n\nconst ME = path.dirname(require.resolve('monaco-editor/package.json'));\n\nconst cssLocation = path.join(`${ME}/min/vs/editor`);\n\nconst workers = {\n  base: path.join(ME, 'esm/vs/editor/editor.main.js'),\n  editor: path.join(ME, 'esm/vs/editor/editor.worker.js'),\n  json: path.join(ME, 'esm/vs/language/json/json.worker.js'),\n  css: path.join(ME, 'esm/vs/language/css/css.worker.js'),\n  html: path.join(ME, 'esm/vs/language/html/html.worker.js'),\n  ts: path.join(ME, 'esm/vs/language/typescript/ts.worker.js'),\n};\n\nmodule.exports = async function build() {\n  let buildDir = await fs.mkdtemp(path.join(os.tmpdir(), 'monaco--workers-'));\n\n  await esbuild.build({\n    loader: {'.ts': 'ts', '.js': 'js', '.ttf': 'file'},\n    entryPoints: [\n      workers.editor,\n      workers.json,\n      workers.css,\n      workers.html,\n      workers.ts,\n      workers.base,\n    ],\n    bundle: true,\n    outdir: buildDir,\n    format: 'esm',\n    minify: true,\n    sourcemap: false,\n  });\n\n  await copy(`${buildDir}`, OUTPUT_DIR, {\n    overwrite: true,\n    filter: [\n      '**/*',\n      '!*.nls.*'\n    ],\n  });\n\n  await copy(`${cssLocation}`, OUTPUT_DIR, {\n    overwrite: true,\n    filter: [\n      '**/*.css',\n    ],\n  })\n}\n\nif (require.main === module) {\n  module.exports();\n}\n","/home/lprestonsegoiii/Development/NullVoxPopuli/limber/packages/monaco/package.json",[],{"ruleId":"31","severity":2,"message":"32","line":9,"column":2,"nodeType":null,"messageId":"33","endLine":9,"endColumn":3,"fix":"34"},{"ruleId":"31","severity":2,"message":"32","line":10,"column":2,"nodeType":null,"messageId":"33","endLine":10,"endColumn":3,"fix":"35"},{"ruleId":"31","severity":2,"message":"32","line":11,"column":1,"nodeType":null,"messageId":"33","endLine":11,"endColumn":2,"fix":"36"},{"ruleId":"31","severity":2,"message":"32","line":12,"column":2,"nodeType":null,"messageId":"33","endLine":12,"endColumn":3,"fix":"37"},{"ruleId":"31","severity":2,"message":"38","line":15,"column":23,"nodeType":null,"messageId":"39","endLine":15,"endColumn":23,"fix":"40"},{"ruleId":"31","severity":2,"message":"41","line":17,"column":2,"nodeType":null,"messageId":"39","endLine":17,"endColumn":2,"fix":"42"},{"ruleId":"31","severity":2,"message":"43","line":28,"column":14,"nodeType":null,"messageId":"44","endLine":28,"endColumn":54,"fix":"45"},{"ruleId":"31","severity":2,"message":"46","line":46,"column":14,"nodeType":null,"messageId":"44","endLine":49,"endColumn":5,"fix":"47"},{"ruleId":"31","severity":2,"message":"48","line":54,"column":14,"nodeType":null,"messageId":"44","endLine":56,"endColumn":5,"fix":"49"},{"ruleId":"31","severity":2,"message":"41","line":57,"column":5,"nodeType":null,"messageId":"39","endLine":57,"endColumn":5,"fix":"50"},{"ruleId":"31","severity":2,"message":"41","line":58,"column":2,"nodeType":null,"messageId":"39","endLine":58,"endColumn":2,"fix":"51"},"prettier/prettier","Delete `·`","delete",{"range":"52","text":"53"},{"range":"54","text":"53"},{"range":"55","text":"53"},{"range":"56","text":"53"},"Insert `,`","insert",{"range":"57","text":"58"},"Insert `;`",{"range":"59","text":"60"},"Replace `'.ts':·'ts',·'.js':·'js',·'.ttf':·'file'` with `·'.ts':·'ts',·'.js':·'js',·'.ttf':·'file'·`","replace",{"range":"61","text":"62"},"Replace `⏎······'**/*',⏎······'!*.nls.*'⏎····` with `'**/*',·'!*.nls.*'`",{"range":"63","text":"64"},"Replace `⏎······'**/*.css',⏎····` with `'**/*.css'`",{"range":"65","text":"66"},{"range":"67","text":"60"},{"range":"68","text":"60"},[143,144],"",[212,213],[255,256],[260,261],[362,362],",",[370,370],";",[914,954]," '.ts': 'ts', '.js': 'js', '.ttf': 'file' ",[1284,1320],"'**/*', '!*.nls.*'",[1409,1432],"'**/*.css'",[1439,1439],[1441,1441]]