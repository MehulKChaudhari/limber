/////////////////////////////////////////////////////
/////////////////////////////////////////////////////
//
//  NOTE on convention:
//    script names starting with "_:" do so because 
//    they are not intended to be invoked by humans
//    turborepo will invoke these scripts, freeing
//    up the more human-readable script names for 
//    running by humans.
// 
//    This helps reduce the possibility of accidental
//    cycles in script dependencies and invocation.
//
//    One way to think about the _: scripts is the 
//    "endpoint" -- more turbo commands should not
//    be spawned by these scripts.
//
/////////////////////////////////////////////////////
/////////////////////////////////////////////////////
{
  "baseBranch": "origin/main",
  "pipeline": {
    /////////////////////////////////////////////////
    /////////////////////////////////////////////////
    //
    //         Local Dev
    //
    /////////////////////////////////////////////////
    /////////////////////////////////////////////////
    "dev": {
      "dependsOn": ["^dev"],
      "cache": false
    },
    "start": {
      "dependsOn": ["^build"],
      "cache": false
    },

    /////////////////////////////////////////////////
    /////////////////////////////////////////////////
    //
    //         C.I. / C.D.
    //
    /////////////////////////////////////////////////
    /////////////////////////////////////////////////
    "build": {
      "outputs": ["dist/**"],
      "dependsOn": ["^build"]
    },
    "test": {
      "outputs": [],
      "dependsOn": ["^build"]
    },
    // Apps will have test:ember and test:browserstack
    // They are separate so that they can cache independently
    // and provide more variability than just "test"
    "test:ember": {
      "env": ["CI_BROWSER", "EMBER_TRY_CURRENT_SCENARIO", "EMBROIDER_TEST_SETUP_OPTIONS"],
      "dependsOn": ["^build"]
    },
    "test:browserstack": {
      "dependsOn": ["^build"]
    },
    // All scenarios
    "test:scenarios": {
      "dependsOn": ["^build"]
    },

    /////////////////////////////////////////////////
    /////////////////////////////////////////////////
    //
    //         Quality Checks
    //
    /////////////////////////////////////////////////
    /////////////////////////////////////////////////
    "_:lint": {
      "outputs": [],
      "dependsOn": ["_:lint:js", "_:lint:hbs", "_:lint:prettier", "_:lint:types"]
    },
    "_:lint:js": {
      "outputs": []
    },
    "_:lint:hbs": {
      "outputs": []
    },
    "_:lint:prettier": {
      "outputs": []
    },
    "_:lint:types": {
      "outputs": [],
      "dependsOn": ["^build"]
    },

    "_:lint:fix": {
      "cache": false,
      "dependsOn": ["_:lint:js:fix", "_:lint:hbs:fix"]
    },
    "_:lint:js:fix": { "cache": false, "dependsOn": ["_:lint:prettier:fix"] },
    "_:lint:hbs:fix": { "cache": false },
    "_:lint:prettier:fix": { "cache": false }
  }
}
